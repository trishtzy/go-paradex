// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/trishtzy/go-paradex/models"
)

// OnboardingReader is a Reader for the Onboarding structure.
type OnboardingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OnboardingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOnboardingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOnboardingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOnboardingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /onboarding] onboarding", response, response.Code())
	}
}

// NewOnboardingOK creates a OnboardingOK with default headers values
func NewOnboardingOK() *OnboardingOK {
	return &OnboardingOK{}
}

/*
OnboardingOK describes a response with status code 200, with default header values.

An empty response
*/
type OnboardingOK struct {
}

// IsSuccess returns true when this onboarding o k response has a 2xx status code
func (o *OnboardingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this onboarding o k response has a 3xx status code
func (o *OnboardingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this onboarding o k response has a 4xx status code
func (o *OnboardingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this onboarding o k response has a 5xx status code
func (o *OnboardingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this onboarding o k response a status code equal to that given
func (o *OnboardingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the onboarding o k response
func (o *OnboardingOK) Code() int {
	return 200
}

func (o *OnboardingOK) Error() string {
	return fmt.Sprintf("[POST /onboarding][%d] onboardingOK", 200)
}

func (o *OnboardingOK) String() string {
	return fmt.Sprintf("[POST /onboarding][%d] onboardingOK", 200)
}

func (o *OnboardingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOnboardingBadRequest creates a OnboardingBadRequest with default headers values
func NewOnboardingBadRequest() *OnboardingBadRequest {
	return &OnboardingBadRequest{}
}

/*
OnboardingBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OnboardingBadRequest struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this onboarding bad request response has a 2xx status code
func (o *OnboardingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this onboarding bad request response has a 3xx status code
func (o *OnboardingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this onboarding bad request response has a 4xx status code
func (o *OnboardingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this onboarding bad request response has a 5xx status code
func (o *OnboardingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this onboarding bad request response a status code equal to that given
func (o *OnboardingBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the onboarding bad request response
func (o *OnboardingBadRequest) Code() int {
	return 400
}

func (o *OnboardingBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /onboarding][%d] onboardingBadRequest %s", 400, payload)
}

func (o *OnboardingBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /onboarding][%d] onboardingBadRequest %s", 400, payload)
}

func (o *OnboardingBadRequest) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *OnboardingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOnboardingUnauthorized creates a OnboardingUnauthorized with default headers values
func NewOnboardingUnauthorized() *OnboardingUnauthorized {
	return &OnboardingUnauthorized{}
}

/*
OnboardingUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OnboardingUnauthorized struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this onboarding unauthorized response has a 2xx status code
func (o *OnboardingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this onboarding unauthorized response has a 3xx status code
func (o *OnboardingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this onboarding unauthorized response has a 4xx status code
func (o *OnboardingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this onboarding unauthorized response has a 5xx status code
func (o *OnboardingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this onboarding unauthorized response a status code equal to that given
func (o *OnboardingUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the onboarding unauthorized response
func (o *OnboardingUnauthorized) Code() int {
	return 401
}

func (o *OnboardingUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /onboarding][%d] onboardingUnauthorized %s", 401, payload)
}

func (o *OnboardingUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /onboarding][%d] onboardingUnauthorized %s", 401, payload)
}

func (o *OnboardingUnauthorized) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *OnboardingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
