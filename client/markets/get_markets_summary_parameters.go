// Code generated by go-swagger; DO NOT EDIT.

package markets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetMarketsSummaryParams creates a new GetMarketsSummaryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetMarketsSummaryParams() *GetMarketsSummaryParams {
	return &GetMarketsSummaryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetMarketsSummaryParamsWithTimeout creates a new GetMarketsSummaryParams object
// with the ability to set a timeout on a request.
func NewGetMarketsSummaryParamsWithTimeout(timeout time.Duration) *GetMarketsSummaryParams {
	return &GetMarketsSummaryParams{
		timeout: timeout,
	}
}

// NewGetMarketsSummaryParamsWithContext creates a new GetMarketsSummaryParams object
// with the ability to set a context for a request.
func NewGetMarketsSummaryParamsWithContext(ctx context.Context) *GetMarketsSummaryParams {
	return &GetMarketsSummaryParams{
		Context: ctx,
	}
}

// NewGetMarketsSummaryParamsWithHTTPClient creates a new GetMarketsSummaryParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetMarketsSummaryParamsWithHTTPClient(client *http.Client) *GetMarketsSummaryParams {
	return &GetMarketsSummaryParams{
		HTTPClient: client,
	}
}

/*
GetMarketsSummaryParams contains all the parameters to send to the API endpoint

	for the get markets summary operation.

	Typically these are written to a http.Request.
*/
type GetMarketsSummaryParams struct {

	/* End.

	   End Time (unix time millisecond)
	*/
	End *int64

	/* Market.

	   Name of the market for which summary is requested (for all available markets use ALL)
	*/
	Market string

	/* Start.

	   Start Time (unix time millisecond)
	*/
	Start *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get markets summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMarketsSummaryParams) WithDefaults() *GetMarketsSummaryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get markets summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMarketsSummaryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get markets summary params
func (o *GetMarketsSummaryParams) WithTimeout(timeout time.Duration) *GetMarketsSummaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get markets summary params
func (o *GetMarketsSummaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get markets summary params
func (o *GetMarketsSummaryParams) WithContext(ctx context.Context) *GetMarketsSummaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get markets summary params
func (o *GetMarketsSummaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get markets summary params
func (o *GetMarketsSummaryParams) WithHTTPClient(client *http.Client) *GetMarketsSummaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get markets summary params
func (o *GetMarketsSummaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnd adds the end to the get markets summary params
func (o *GetMarketsSummaryParams) WithEnd(end *int64) *GetMarketsSummaryParams {
	o.SetEnd(end)
	return o
}

// SetEnd adds the end to the get markets summary params
func (o *GetMarketsSummaryParams) SetEnd(end *int64) {
	o.End = end
}

// WithMarket adds the market to the get markets summary params
func (o *GetMarketsSummaryParams) WithMarket(market string) *GetMarketsSummaryParams {
	o.SetMarket(market)
	return o
}

// SetMarket adds the market to the get markets summary params
func (o *GetMarketsSummaryParams) SetMarket(market string) {
	o.Market = market
}

// WithStart adds the start to the get markets summary params
func (o *GetMarketsSummaryParams) WithStart(start *int64) *GetMarketsSummaryParams {
	o.SetStart(start)
	return o
}

// SetStart adds the start to the get markets summary params
func (o *GetMarketsSummaryParams) SetStart(start *int64) {
	o.Start = start
}

// WriteToRequest writes these params to a swagger request
func (o *GetMarketsSummaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.End != nil {

		// query param end
		var qrEnd int64

		if o.End != nil {
			qrEnd = *o.End
		}
		qEnd := swag.FormatInt64(qrEnd)
		if qEnd != "" {

			if err := r.SetQueryParam("end", qEnd); err != nil {
				return err
			}
		}
	}

	// query param market
	qrMarket := o.Market
	qMarket := qrMarket
	if qMarket != "" {

		if err := r.SetQueryParam("market", qMarket); err != nil {
			return err
		}
	}

	if o.Start != nil {

		// query param start
		var qrStart int64

		if o.Start != nil {
			qrStart = *o.Start
		}
		qStart := swag.FormatInt64(qrStart)
		if qStart != "" {

			if err := r.SetQueryParam("start", qStart); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
