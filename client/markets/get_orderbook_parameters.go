// Code generated by go-swagger; DO NOT EDIT.

package markets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrderbookParams creates a new GetOrderbookParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrderbookParams() *GetOrderbookParams {
	return &GetOrderbookParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrderbookParamsWithTimeout creates a new GetOrderbookParams object
// with the ability to set a timeout on a request.
func NewGetOrderbookParamsWithTimeout(timeout time.Duration) *GetOrderbookParams {
	return &GetOrderbookParams{
		timeout: timeout,
	}
}

// NewGetOrderbookParamsWithContext creates a new GetOrderbookParams object
// with the ability to set a context for a request.
func NewGetOrderbookParamsWithContext(ctx context.Context) *GetOrderbookParams {
	return &GetOrderbookParams{
		Context: ctx,
	}
}

// NewGetOrderbookParamsWithHTTPClient creates a new GetOrderbookParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrderbookParamsWithHTTPClient(client *http.Client) *GetOrderbookParams {
	return &GetOrderbookParams{
		HTTPClient: client,
	}
}

/*
GetOrderbookParams contains all the parameters to send to the API endpoint

	for the get orderbook operation.

	Typically these are written to a http.Request.
*/
type GetOrderbookParams struct {

	/* Depth.

	   Depth

	   Default: 20
	*/
	Depth *int64

	/* Market.

	   Market symbol - ex: BTC-USD-PERP
	*/
	Market string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get orderbook params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrderbookParams) WithDefaults() *GetOrderbookParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get orderbook params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrderbookParams) SetDefaults() {
	var (
		depthDefault = int64(20)
	)

	val := GetOrderbookParams{
		Depth: &depthDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get orderbook params
func (o *GetOrderbookParams) WithTimeout(timeout time.Duration) *GetOrderbookParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get orderbook params
func (o *GetOrderbookParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get orderbook params
func (o *GetOrderbookParams) WithContext(ctx context.Context) *GetOrderbookParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get orderbook params
func (o *GetOrderbookParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get orderbook params
func (o *GetOrderbookParams) WithHTTPClient(client *http.Client) *GetOrderbookParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get orderbook params
func (o *GetOrderbookParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDepth adds the depth to the get orderbook params
func (o *GetOrderbookParams) WithDepth(depth *int64) *GetOrderbookParams {
	o.SetDepth(depth)
	return o
}

// SetDepth adds the depth to the get orderbook params
func (o *GetOrderbookParams) SetDepth(depth *int64) {
	o.Depth = depth
}

// WithMarket adds the market to the get orderbook params
func (o *GetOrderbookParams) WithMarket(market string) *GetOrderbookParams {
	o.SetMarket(market)
	return o
}

// SetMarket adds the market to the get orderbook params
func (o *GetOrderbookParams) SetMarket(market string) {
	o.Market = market
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrderbookParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Depth != nil {

		// query param depth
		var qrDepth int64

		if o.Depth != nil {
			qrDepth = *o.Depth
		}
		qDepth := swag.FormatInt64(qrDepth)
		if qDepth != "" {

			if err := r.SetQueryParam("depth", qDepth); err != nil {
				return err
			}
		}
	}

	// path param market
	if err := r.SetPathParam("market", o.Market); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
