// Code generated by go-swagger; DO NOT EDIT.

package algos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/trishtzy/go-paradex/models"
)

// CancelAlgoOrderReader is a Reader for the CancelAlgoOrder structure.
type CancelAlgoOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelAlgoOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewCancelAlgoOrderNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewCancelAlgoOrderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /algo/orders/{algo_id}] cancel-algo-order", response, response.Code())
	}
}

// NewCancelAlgoOrderNoContent creates a CancelAlgoOrderNoContent with default headers values
func NewCancelAlgoOrderNoContent() *CancelAlgoOrderNoContent {
	return &CancelAlgoOrderNoContent{}
}

/*
CancelAlgoOrderNoContent describes a response with status code 204, with default header values.

No Content
*/
type CancelAlgoOrderNoContent struct {
}

// IsSuccess returns true when this cancel algo order no content response has a 2xx status code
func (o *CancelAlgoOrderNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cancel algo order no content response has a 3xx status code
func (o *CancelAlgoOrderNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel algo order no content response has a 4xx status code
func (o *CancelAlgoOrderNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this cancel algo order no content response has a 5xx status code
func (o *CancelAlgoOrderNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel algo order no content response a status code equal to that given
func (o *CancelAlgoOrderNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the cancel algo order no content response
func (o *CancelAlgoOrderNoContent) Code() int {
	return 204
}

func (o *CancelAlgoOrderNoContent) Error() string {
	return fmt.Sprintf("[DELETE /algo/orders/{algo_id}][%d] cancelAlgoOrderNoContent", 204)
}

func (o *CancelAlgoOrderNoContent) String() string {
	return fmt.Sprintf("[DELETE /algo/orders/{algo_id}][%d] cancelAlgoOrderNoContent", 204)
}

func (o *CancelAlgoOrderNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCancelAlgoOrderNotFound creates a CancelAlgoOrderNotFound with default headers values
func NewCancelAlgoOrderNotFound() *CancelAlgoOrderNotFound {
	return &CancelAlgoOrderNotFound{}
}

/*
CancelAlgoOrderNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CancelAlgoOrderNotFound struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this cancel algo order not found response has a 2xx status code
func (o *CancelAlgoOrderNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cancel algo order not found response has a 3xx status code
func (o *CancelAlgoOrderNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel algo order not found response has a 4xx status code
func (o *CancelAlgoOrderNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cancel algo order not found response has a 5xx status code
func (o *CancelAlgoOrderNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel algo order not found response a status code equal to that given
func (o *CancelAlgoOrderNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the cancel algo order not found response
func (o *CancelAlgoOrderNotFound) Code() int {
	return 404
}

func (o *CancelAlgoOrderNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /algo/orders/{algo_id}][%d] cancelAlgoOrderNotFound %s", 404, payload)
}

func (o *CancelAlgoOrderNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /algo/orders/{algo_id}][%d] cancelAlgoOrderNotFound %s", 404, payload)
}

func (o *CancelAlgoOrderNotFound) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *CancelAlgoOrderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
