// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/trishtzy/go-paradex/models"
)

// OrdersGetByClientIDReader is a Reader for the OrdersGetByClientID structure.
type OrdersGetByClientIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrdersGetByClientIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrdersGetByClientIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrdersGetByClientIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orders/by_client_id/{client_id}] orders-get-by-client-id", response, response.Code())
	}
}

// NewOrdersGetByClientIDOK creates a OrdersGetByClientIDOK with default headers values
func NewOrdersGetByClientIDOK() *OrdersGetByClientIDOK {
	return &OrdersGetByClientIDOK{}
}

/*
OrdersGetByClientIDOK describes a response with status code 200, with default header values.

OK
*/
type OrdersGetByClientIDOK struct {
	Payload *models.ResponsesOrderResp
}

// IsSuccess returns true when this orders get by client Id o k response has a 2xx status code
func (o *OrdersGetByClientIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this orders get by client Id o k response has a 3xx status code
func (o *OrdersGetByClientIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this orders get by client Id o k response has a 4xx status code
func (o *OrdersGetByClientIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this orders get by client Id o k response has a 5xx status code
func (o *OrdersGetByClientIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this orders get by client Id o k response a status code equal to that given
func (o *OrdersGetByClientIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the orders get by client Id o k response
func (o *OrdersGetByClientIDOK) Code() int {
	return 200
}

func (o *OrdersGetByClientIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/by_client_id/{client_id}][%d] ordersGetByClientIdOK %s", 200, payload)
}

func (o *OrdersGetByClientIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/by_client_id/{client_id}][%d] ordersGetByClientIdOK %s", 200, payload)
}

func (o *OrdersGetByClientIDOK) GetPayload() *models.ResponsesOrderResp {
	return o.Payload
}

func (o *OrdersGetByClientIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesOrderResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrdersGetByClientIDBadRequest creates a OrdersGetByClientIDBadRequest with default headers values
func NewOrdersGetByClientIDBadRequest() *OrdersGetByClientIDBadRequest {
	return &OrdersGetByClientIDBadRequest{}
}

/*
OrdersGetByClientIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrdersGetByClientIDBadRequest struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this orders get by client Id bad request response has a 2xx status code
func (o *OrdersGetByClientIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this orders get by client Id bad request response has a 3xx status code
func (o *OrdersGetByClientIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this orders get by client Id bad request response has a 4xx status code
func (o *OrdersGetByClientIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this orders get by client Id bad request response has a 5xx status code
func (o *OrdersGetByClientIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this orders get by client Id bad request response a status code equal to that given
func (o *OrdersGetByClientIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the orders get by client Id bad request response
func (o *OrdersGetByClientIDBadRequest) Code() int {
	return 400
}

func (o *OrdersGetByClientIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/by_client_id/{client_id}][%d] ordersGetByClientIdBadRequest %s", 400, payload)
}

func (o *OrdersGetByClientIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/by_client_id/{client_id}][%d] ordersGetByClientIdBadRequest %s", 400, payload)
}

func (o *OrdersGetByClientIDBadRequest) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *OrdersGetByClientIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
