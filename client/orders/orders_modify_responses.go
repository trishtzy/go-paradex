// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/trishtzy/go-paradex/models"
)

// OrdersModifyReader is a Reader for the OrdersModify structure.
type OrdersModifyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrdersModifyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrdersModifyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrdersModifyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /orders/{order_id}] orders-modify", response, response.Code())
	}
}

// NewOrdersModifyOK creates a OrdersModifyOK with default headers values
func NewOrdersModifyOK() *OrdersModifyOK {
	return &OrdersModifyOK{}
}

/*
OrdersModifyOK describes a response with status code 200, with default header values.

OK
*/
type OrdersModifyOK struct {
	Payload *models.ResponsesOrderResp
}

// IsSuccess returns true when this orders modify o k response has a 2xx status code
func (o *OrdersModifyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this orders modify o k response has a 3xx status code
func (o *OrdersModifyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this orders modify o k response has a 4xx status code
func (o *OrdersModifyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this orders modify o k response has a 5xx status code
func (o *OrdersModifyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this orders modify o k response a status code equal to that given
func (o *OrdersModifyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the orders modify o k response
func (o *OrdersModifyOK) Code() int {
	return 200
}

func (o *OrdersModifyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orders/{order_id}][%d] ordersModifyOK %s", 200, payload)
}

func (o *OrdersModifyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orders/{order_id}][%d] ordersModifyOK %s", 200, payload)
}

func (o *OrdersModifyOK) GetPayload() *models.ResponsesOrderResp {
	return o.Payload
}

func (o *OrdersModifyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesOrderResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrdersModifyBadRequest creates a OrdersModifyBadRequest with default headers values
func NewOrdersModifyBadRequest() *OrdersModifyBadRequest {
	return &OrdersModifyBadRequest{}
}

/*
OrdersModifyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrdersModifyBadRequest struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this orders modify bad request response has a 2xx status code
func (o *OrdersModifyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this orders modify bad request response has a 3xx status code
func (o *OrdersModifyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this orders modify bad request response has a 4xx status code
func (o *OrdersModifyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this orders modify bad request response has a 5xx status code
func (o *OrdersModifyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this orders modify bad request response a status code equal to that given
func (o *OrdersModifyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the orders modify bad request response
func (o *OrdersModifyBadRequest) Code() int {
	return 400
}

func (o *OrdersModifyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orders/{order_id}][%d] ordersModifyBadRequest %s", 400, payload)
}

func (o *OrdersModifyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orders/{order_id}][%d] ordersModifyBadRequest %s", 400, payload)
}

func (o *OrdersModifyBadRequest) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *OrdersModifyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
