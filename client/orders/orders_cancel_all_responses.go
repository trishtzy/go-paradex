// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/trishtzy/go-paradex/models"
)

// OrdersCancelAllReader is a Reader for the OrdersCancelAll structure.
type OrdersCancelAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrdersCancelAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrdersCancelAllOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrdersCancelAllBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /orders] orders-cancel-all", response, response.Code())
	}
}

// NewOrdersCancelAllOK creates a OrdersCancelAllOK with default headers values
func NewOrdersCancelAllOK() *OrdersCancelAllOK {
	return &OrdersCancelAllOK{}
}

/*
OrdersCancelAllOK describes a response with status code 200, with default header values.

OK
*/
type OrdersCancelAllOK struct {
}

// IsSuccess returns true when this orders cancel all o k response has a 2xx status code
func (o *OrdersCancelAllOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this orders cancel all o k response has a 3xx status code
func (o *OrdersCancelAllOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this orders cancel all o k response has a 4xx status code
func (o *OrdersCancelAllOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this orders cancel all o k response has a 5xx status code
func (o *OrdersCancelAllOK) IsServerError() bool {
	return false
}

// IsCode returns true when this orders cancel all o k response a status code equal to that given
func (o *OrdersCancelAllOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the orders cancel all o k response
func (o *OrdersCancelAllOK) Code() int {
	return 200
}

func (o *OrdersCancelAllOK) Error() string {
	return fmt.Sprintf("[DELETE /orders][%d] ordersCancelAllOK", 200)
}

func (o *OrdersCancelAllOK) String() string {
	return fmt.Sprintf("[DELETE /orders][%d] ordersCancelAllOK", 200)
}

func (o *OrdersCancelAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOrdersCancelAllBadRequest creates a OrdersCancelAllBadRequest with default headers values
func NewOrdersCancelAllBadRequest() *OrdersCancelAllBadRequest {
	return &OrdersCancelAllBadRequest{}
}

/*
OrdersCancelAllBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrdersCancelAllBadRequest struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this orders cancel all bad request response has a 2xx status code
func (o *OrdersCancelAllBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this orders cancel all bad request response has a 3xx status code
func (o *OrdersCancelAllBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this orders cancel all bad request response has a 4xx status code
func (o *OrdersCancelAllBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this orders cancel all bad request response has a 5xx status code
func (o *OrdersCancelAllBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this orders cancel all bad request response a status code equal to that given
func (o *OrdersCancelAllBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the orders cancel all bad request response
func (o *OrdersCancelAllBadRequest) Code() int {
	return 400
}

func (o *OrdersCancelAllBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /orders][%d] ordersCancelAllBadRequest %s", 400, payload)
}

func (o *OrdersCancelAllBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /orders][%d] ordersCancelAllBadRequest %s", 400, payload)
}

func (o *OrdersCancelAllBadRequest) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *OrdersCancelAllBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
