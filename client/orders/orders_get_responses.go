// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/trishtzy/go-paradex/models"
)

// OrdersGetReader is a Reader for the OrdersGet structure.
type OrdersGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrdersGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrdersGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrdersGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orders/{order_id}] orders-get", response, response.Code())
	}
}

// NewOrdersGetOK creates a OrdersGetOK with default headers values
func NewOrdersGetOK() *OrdersGetOK {
	return &OrdersGetOK{}
}

/*
OrdersGetOK describes a response with status code 200, with default header values.

OK
*/
type OrdersGetOK struct {
	Payload *models.ResponsesOrderResp
}

// IsSuccess returns true when this orders get o k response has a 2xx status code
func (o *OrdersGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this orders get o k response has a 3xx status code
func (o *OrdersGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this orders get o k response has a 4xx status code
func (o *OrdersGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this orders get o k response has a 5xx status code
func (o *OrdersGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this orders get o k response a status code equal to that given
func (o *OrdersGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the orders get o k response
func (o *OrdersGetOK) Code() int {
	return 200
}

func (o *OrdersGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{order_id}][%d] ordersGetOK %s", 200, payload)
}

func (o *OrdersGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{order_id}][%d] ordersGetOK %s", 200, payload)
}

func (o *OrdersGetOK) GetPayload() *models.ResponsesOrderResp {
	return o.Payload
}

func (o *OrdersGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesOrderResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrdersGetBadRequest creates a OrdersGetBadRequest with default headers values
func NewOrdersGetBadRequest() *OrdersGetBadRequest {
	return &OrdersGetBadRequest{}
}

/*
OrdersGetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrdersGetBadRequest struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this orders get bad request response has a 2xx status code
func (o *OrdersGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this orders get bad request response has a 3xx status code
func (o *OrdersGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this orders get bad request response has a 4xx status code
func (o *OrdersGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this orders get bad request response has a 5xx status code
func (o *OrdersGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this orders get bad request response a status code equal to that given
func (o *OrdersGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the orders get bad request response
func (o *OrdersGetBadRequest) Code() int {
	return 400
}

func (o *OrdersGetBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{order_id}][%d] ordersGetBadRequest %s", 400, payload)
}

func (o *OrdersGetBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{order_id}][%d] ordersGetBadRequest %s", 400, payload)
}

func (o *OrdersGetBadRequest) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *OrdersGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
