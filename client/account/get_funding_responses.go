// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/trishtzy/go-paradex/models"
)

// GetFundingReader is a Reader for the GetFunding structure.
type GetFundingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFundingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFundingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFundingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFundingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /funding/payments] get-funding", response, response.Code())
	}
}

// NewGetFundingOK creates a GetFundingOK with default headers values
func NewGetFundingOK() *GetFundingOK {
	return &GetFundingOK{}
}

/*
GetFundingOK describes a response with status code 200, with default header values.

OK
*/
type GetFundingOK struct {
	Payload *models.ResponsesFundingHistoryResp
}

// IsSuccess returns true when this get funding o k response has a 2xx status code
func (o *GetFundingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get funding o k response has a 3xx status code
func (o *GetFundingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get funding o k response has a 4xx status code
func (o *GetFundingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get funding o k response has a 5xx status code
func (o *GetFundingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get funding o k response a status code equal to that given
func (o *GetFundingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get funding o k response
func (o *GetFundingOK) Code() int {
	return 200
}

func (o *GetFundingOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /funding/payments][%d] getFundingOK %s", 200, payload)
}

func (o *GetFundingOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /funding/payments][%d] getFundingOK %s", 200, payload)
}

func (o *GetFundingOK) GetPayload() *models.ResponsesFundingHistoryResp {
	return o.Payload
}

func (o *GetFundingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesFundingHistoryResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFundingBadRequest creates a GetFundingBadRequest with default headers values
func NewGetFundingBadRequest() *GetFundingBadRequest {
	return &GetFundingBadRequest{}
}

/*
GetFundingBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFundingBadRequest struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this get funding bad request response has a 2xx status code
func (o *GetFundingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get funding bad request response has a 3xx status code
func (o *GetFundingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get funding bad request response has a 4xx status code
func (o *GetFundingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get funding bad request response has a 5xx status code
func (o *GetFundingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get funding bad request response a status code equal to that given
func (o *GetFundingBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get funding bad request response
func (o *GetFundingBadRequest) Code() int {
	return 400
}

func (o *GetFundingBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /funding/payments][%d] getFundingBadRequest %s", 400, payload)
}

func (o *GetFundingBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /funding/payments][%d] getFundingBadRequest %s", 400, payload)
}

func (o *GetFundingBadRequest) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *GetFundingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFundingUnauthorized creates a GetFundingUnauthorized with default headers values
func NewGetFundingUnauthorized() *GetFundingUnauthorized {
	return &GetFundingUnauthorized{}
}

/*
GetFundingUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetFundingUnauthorized struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this get funding unauthorized response has a 2xx status code
func (o *GetFundingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get funding unauthorized response has a 3xx status code
func (o *GetFundingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get funding unauthorized response has a 4xx status code
func (o *GetFundingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get funding unauthorized response has a 5xx status code
func (o *GetFundingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get funding unauthorized response a status code equal to that given
func (o *GetFundingUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get funding unauthorized response
func (o *GetFundingUnauthorized) Code() int {
	return 401
}

func (o *GetFundingUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /funding/payments][%d] getFundingUnauthorized %s", 401, payload)
}

func (o *GetFundingUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /funding/payments][%d] getFundingUnauthorized %s", 401, payload)
}

func (o *GetFundingUnauthorized) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *GetFundingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
