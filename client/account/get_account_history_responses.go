// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/trishtzy/go-paradex/models"
)

// GetAccountHistoryReader is a Reader for the GetAccountHistory structure.
type GetAccountHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAccountHistoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /account/history] get-account-history", response, response.Code())
	}
}

// NewGetAccountHistoryOK creates a GetAccountHistoryOK with default headers values
func NewGetAccountHistoryOK() *GetAccountHistoryOK {
	return &GetAccountHistoryOK{}
}

/*
GetAccountHistoryOK describes a response with status code 200, with default header values.

OK
*/
type GetAccountHistoryOK struct {
	Payload *models.ResponsesAccountHistoricalDataResp
}

// IsSuccess returns true when this get account history o k response has a 2xx status code
func (o *GetAccountHistoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get account history o k response has a 3xx status code
func (o *GetAccountHistoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account history o k response has a 4xx status code
func (o *GetAccountHistoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get account history o k response has a 5xx status code
func (o *GetAccountHistoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get account history o k response a status code equal to that given
func (o *GetAccountHistoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get account history o k response
func (o *GetAccountHistoryOK) Code() int {
	return 200
}

func (o *GetAccountHistoryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /account/history][%d] getAccountHistoryOK %s", 200, payload)
}

func (o *GetAccountHistoryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /account/history][%d] getAccountHistoryOK %s", 200, payload)
}

func (o *GetAccountHistoryOK) GetPayload() *models.ResponsesAccountHistoricalDataResp {
	return o.Payload
}

func (o *GetAccountHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAccountHistoricalDataResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountHistoryBadRequest creates a GetAccountHistoryBadRequest with default headers values
func NewGetAccountHistoryBadRequest() *GetAccountHistoryBadRequest {
	return &GetAccountHistoryBadRequest{}
}

/*
GetAccountHistoryBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAccountHistoryBadRequest struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this get account history bad request response has a 2xx status code
func (o *GetAccountHistoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account history bad request response has a 3xx status code
func (o *GetAccountHistoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account history bad request response has a 4xx status code
func (o *GetAccountHistoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account history bad request response has a 5xx status code
func (o *GetAccountHistoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get account history bad request response a status code equal to that given
func (o *GetAccountHistoryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get account history bad request response
func (o *GetAccountHistoryBadRequest) Code() int {
	return 400
}

func (o *GetAccountHistoryBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /account/history][%d] getAccountHistoryBadRequest %s", 400, payload)
}

func (o *GetAccountHistoryBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /account/history][%d] getAccountHistoryBadRequest %s", 400, payload)
}

func (o *GetAccountHistoryBadRequest) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *GetAccountHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountHistoryUnauthorized creates a GetAccountHistoryUnauthorized with default headers values
func NewGetAccountHistoryUnauthorized() *GetAccountHistoryUnauthorized {
	return &GetAccountHistoryUnauthorized{}
}

/*
GetAccountHistoryUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAccountHistoryUnauthorized struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this get account history unauthorized response has a 2xx status code
func (o *GetAccountHistoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account history unauthorized response has a 3xx status code
func (o *GetAccountHistoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account history unauthorized response has a 4xx status code
func (o *GetAccountHistoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account history unauthorized response has a 5xx status code
func (o *GetAccountHistoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get account history unauthorized response a status code equal to that given
func (o *GetAccountHistoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get account history unauthorized response
func (o *GetAccountHistoryUnauthorized) Code() int {
	return 401
}

func (o *GetAccountHistoryUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /account/history][%d] getAccountHistoryUnauthorized %s", 401, payload)
}

func (o *GetAccountHistoryUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /account/history][%d] getAccountHistoryUnauthorized %s", 401, payload)
}

func (o *GetAccountHistoryUnauthorized) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *GetAccountHistoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
