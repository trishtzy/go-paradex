// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/trishtzy/go-paradex/models"
)

// GetFillsReader is a Reader for the GetFills structure.
type GetFillsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFillsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFillsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFillsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFillsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /fills] GetFills", response, response.Code())
	}
}

// NewGetFillsOK creates a GetFillsOK with default headers values
func NewGetFillsOK() *GetFillsOK {
	return &GetFillsOK{}
}

/*
GetFillsOK describes a response with status code 200, with default header values.

OK
*/
type GetFillsOK struct {
	Payload *models.ResponsesGetFillsResp
}

// IsSuccess returns true when this get fills o k response has a 2xx status code
func (o *GetFillsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fills o k response has a 3xx status code
func (o *GetFillsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fills o k response has a 4xx status code
func (o *GetFillsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fills o k response has a 5xx status code
func (o *GetFillsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fills o k response a status code equal to that given
func (o *GetFillsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fills o k response
func (o *GetFillsOK) Code() int {
	return 200
}

func (o *GetFillsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fills][%d] getFillsOK %s", 200, payload)
}

func (o *GetFillsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fills][%d] getFillsOK %s", 200, payload)
}

func (o *GetFillsOK) GetPayload() *models.ResponsesGetFillsResp {
	return o.Payload
}

func (o *GetFillsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesGetFillsResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFillsBadRequest creates a GetFillsBadRequest with default headers values
func NewGetFillsBadRequest() *GetFillsBadRequest {
	return &GetFillsBadRequest{}
}

/*
GetFillsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFillsBadRequest struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this get fills bad request response has a 2xx status code
func (o *GetFillsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fills bad request response has a 3xx status code
func (o *GetFillsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fills bad request response has a 4xx status code
func (o *GetFillsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fills bad request response has a 5xx status code
func (o *GetFillsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fills bad request response a status code equal to that given
func (o *GetFillsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fills bad request response
func (o *GetFillsBadRequest) Code() int {
	return 400
}

func (o *GetFillsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fills][%d] getFillsBadRequest %s", 400, payload)
}

func (o *GetFillsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fills][%d] getFillsBadRequest %s", 400, payload)
}

func (o *GetFillsBadRequest) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *GetFillsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFillsUnauthorized creates a GetFillsUnauthorized with default headers values
func NewGetFillsUnauthorized() *GetFillsUnauthorized {
	return &GetFillsUnauthorized{}
}

/*
GetFillsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetFillsUnauthorized struct {
	Payload *models.ResponsesAPIError
}

// IsSuccess returns true when this get fills unauthorized response has a 2xx status code
func (o *GetFillsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fills unauthorized response has a 3xx status code
func (o *GetFillsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fills unauthorized response has a 4xx status code
func (o *GetFillsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fills unauthorized response has a 5xx status code
func (o *GetFillsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get fills unauthorized response a status code equal to that given
func (o *GetFillsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get fills unauthorized response
func (o *GetFillsUnauthorized) Code() int {
	return 401
}

func (o *GetFillsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fills][%d] getFillsUnauthorized %s", 401, payload)
}

func (o *GetFillsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fills][%d] getFillsUnauthorized %s", 401, payload)
}

func (o *GetFillsUnauthorized) GetPayload() *models.ResponsesAPIError {
	return o.Payload
}

func (o *GetFillsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponsesAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
