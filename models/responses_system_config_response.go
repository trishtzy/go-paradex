// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ResponsesSystemConfigResponse responses system config response
//
// swagger:model responses.SystemConfigResponse
type ResponsesSystemConfigResponse struct {

	// Block explorer URL for the current SN Instance
	// Example: https://voyager.testnet.paradex.trade/
	BlockExplorerURL string `json:"block_explorer_url,omitempty"`

	// bridged tokens config
	// https://github.com/starknet-io/starknet-addresses/blob/master/bridged_tokens/goerli.json
	BridgedTokens []*ResponsesBridgedToken `json:"bridged_tokens"`

	// Environment of the Paradex Instance
	// Example: local
	Environment string `json:"environment,omitempty"`

	// L1 chain ID value
	// Example: 5
	L1ChainID string `json:"l1_chain_id,omitempty"`

	// Address of Starknet L1 core contract
	// Example: 0x182FE62c57461d4c5Ab1aE6F04f1D51aA1607daf
	L1CoreContractAddress string `json:"l1_core_contract_address,omitempty"`

	// Address of Starknet L1 operator
	// Example: 0x63e762538C70442758Fd622116d817761c94FD6A
	L1OperatorAddress string `json:"l1_operator_address,omitempty"`

	// Address of L1 Withdraw Relayer
	// Example: 0x63e762538C70442758Fd622116d817761c94FD6A
	L1WithdrawRelayerAddress string `json:"l1_withdraw_relayer_address,omitempty"`

	// Address of L2 Withdraw Relayer
	// Example: 0x63e762538C70442758Fd622116d817761c94FD6A
	L2WithdrawRelayerAddress string `json:"l2_withdraw_relayer_address,omitempty"`

	// Liquidation fee
	// Example: 0.20
	LiquidationFee string `json:"liquidation_fee,omitempty"`

	// Oracle contract address
	// Example: 0x47c622ce5f7ff7fa17725df596f4f506364e49be0621eb142a75b44ee3689c6
	OracleAddress string `json:"oracle_address,omitempty"`

	// Class hash of the account contract
	// Example: 0x033434ad846cdd5f23eb73ff09fe6fddd568284a0fb7d1be20ee482f044dabe2
	ParaclearAccountHash string `json:"paraclear_account_hash,omitempty"`

	// Proxy hash of the account contract
	// Example: 0x3530cc4759d78042f1b543bf797f5f3d647cde0388c33734cf91b7f7b9314a9
	ParaclearAccountProxyHash string `json:"paraclear_account_proxy_hash,omitempty"`

	// Paraclear contract address
	// Example: 0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7554d
	ParaclearAddress string `json:"paraclear_address,omitempty"`

	// paraclear decimals
	ParaclearDecimals int64 `json:"paraclear_decimals,omitempty"`

	// Partial liquidation buffer. Account value is supposed to be at least this much above the MMR after partial liquidation
	// Example: 0.2
	PartialLiquidationBuffer string `json:"partial_liquidation_buffer,omitempty"`

	// Minimum granularity of partial liquidation share. The share is rounded up to the nearest multiple of this value
	// Example: 0.05
	PartialLiquidationShareIncrement string `json:"partial_liquidation_share_increment,omitempty"`

	// Chain ID for the Starknet Instance
	// Example: SN_CHAIN_ID
	StarknetChainID string `json:"starknet_chain_id,omitempty"`

	// Full node RPC URL from Starknet
	// Example: https://pathfinder.api.testnet.paradex.trade/rpc/v0_7
	StarknetFullnodeRPCURL string `json:"starknet_fullnode_rpc_url,omitempty"`

	// Feeder Gateway URL from Starknet
	// Example: https://potc-testnet-02.starknet.io
	StarknetGatewayURL string `json:"starknet_gateway_url,omitempty"`

	// Universal deployer address
	// Example: 0x1f3f9d3f1f0b7f3f9f3f9f3f9f3f9f3f9f3f9f3f
	UniversalDeployerAddress string `json:"universal_deployer_address,omitempty"`
}

// Validate validates this responses system config response
func (m *ResponsesSystemConfigResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBridgedTokens(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResponsesSystemConfigResponse) validateBridgedTokens(formats strfmt.Registry) error {
	if swag.IsZero(m.BridgedTokens) { // not required
		return nil
	}

	for i := 0; i < len(m.BridgedTokens); i++ {
		if swag.IsZero(m.BridgedTokens[i]) { // not required
			continue
		}

		if m.BridgedTokens[i] != nil {
			if err := m.BridgedTokens[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("bridged_tokens" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("bridged_tokens" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this responses system config response based on the context it is used
func (m *ResponsesSystemConfigResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateBridgedTokens(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResponsesSystemConfigResponse) contextValidateBridgedTokens(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.BridgedTokens); i++ {

		if m.BridgedTokens[i] != nil {

			if swag.IsZero(m.BridgedTokens[i]) { // not required
				return nil
			}

			if err := m.BridgedTokens[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("bridged_tokens" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("bridged_tokens" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResponsesSystemConfigResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResponsesSystemConfigResponse) UnmarshalBinary(b []byte) error {
	var res ResponsesSystemConfigResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
