// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ResponsesVaultKind responses vault kind
//
// swagger:model responses.VaultKind
type ResponsesVaultKind string

func NewResponsesVaultKind(value ResponsesVaultKind) *ResponsesVaultKind {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ResponsesVaultKind.
func (m ResponsesVaultKind) Pointer() *ResponsesVaultKind {
	return &m
}

const (

	// ResponsesVaultKindUser captures enum value "user"
	ResponsesVaultKindUser ResponsesVaultKind = "user"

	// ResponsesVaultKindProtocol captures enum value "protocol"
	ResponsesVaultKindProtocol ResponsesVaultKind = "protocol"
)

// for schema
var responsesVaultKindEnum []interface{}

func init() {
	var res []ResponsesVaultKind
	if err := json.Unmarshal([]byte(`["user","protocol"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		responsesVaultKindEnum = append(responsesVaultKindEnum, v)
	}
}

func (m ResponsesVaultKind) validateResponsesVaultKindEnum(path, location string, value ResponsesVaultKind) error {
	if err := validate.EnumCase(path, location, value, responsesVaultKindEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this responses vault kind
func (m ResponsesVaultKind) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateResponsesVaultKindEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this responses vault kind based on context it is used
func (m ResponsesVaultKind) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
