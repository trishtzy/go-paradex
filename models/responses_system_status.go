// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ResponsesSystemStatus responses system status
//
// swagger:model responses.SystemStatus
type ResponsesSystemStatus string

func NewResponsesSystemStatus(value ResponsesSystemStatus) *ResponsesSystemStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ResponsesSystemStatus.
func (m ResponsesSystemStatus) Pointer() *ResponsesSystemStatus {
	return &m
}

const (

	// ResponsesSystemStatusOk captures enum value "ok"
	ResponsesSystemStatusOk ResponsesSystemStatus = "ok"

	// ResponsesSystemStatusMaintenance captures enum value "maintenance"
	ResponsesSystemStatusMaintenance ResponsesSystemStatus = "maintenance"

	// ResponsesSystemStatusCancelOnly captures enum value "cancel_only"
	ResponsesSystemStatusCancelOnly ResponsesSystemStatus = "cancel_only"
)

// for schema
var responsesSystemStatusEnum []interface{}

func init() {
	var res []ResponsesSystemStatus
	if err := json.Unmarshal([]byte(`["ok","maintenance","cancel_only"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		responsesSystemStatusEnum = append(responsesSystemStatusEnum, v)
	}
}

func (m ResponsesSystemStatus) validateResponsesSystemStatusEnum(path, location string, value ResponsesSystemStatus) error {
	if err := validate.EnumCase(path, location, value, responsesSystemStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this responses system status
func (m ResponsesSystemStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateResponsesSystemStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this responses system status based on context it is used
func (m ResponsesSystemStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
