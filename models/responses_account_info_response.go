// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ResponsesAccountInfoResponse responses account info response
//
// swagger:model responses.AccountInfoResponse
type ResponsesAccountInfoResponse struct {

	// Starknet address of the account
	// Example: 0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
	Account string `json:"account,omitempty"`

	// Account creation time
	// Example: 1681471234972
	CreatedAt int64 `json:"created_at,omitempty"`

	// Account derivation path used to derive the account, if a sub-account
	// Example: m/44'/9004'/0'/0/1
	DerivationPath string `json:"derivation_path,omitempty"`

	// Isolated market for the account
	// Example: ETHUSD-PERP
	IsolatedMarket string `json:"isolated_market,omitempty"`

	// Account kind
	// Example: main
	Kind struct {
		ResponsesAccountKind
	} `json:"kind,omitempty"`

	// Starknet address of the parent account
	// Example: 0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d
	ParentAccount string `json:"parent_account,omitempty"`

	// Starknet public key
	// Example: 0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d
	PublicKey string `json:"public_key,omitempty"`

	// Username of the account
	// Example: username
	Username string `json:"username,omitempty"`
}

// Validate validates this responses account info response
func (m *ResponsesAccountInfoResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKind(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResponsesAccountInfoResponse) validateKind(formats strfmt.Registry) error {
	if swag.IsZero(m.Kind) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this responses account info response based on the context it is used
func (m *ResponsesAccountInfoResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateKind(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResponsesAccountInfoResponse) contextValidateKind(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *ResponsesAccountInfoResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResponsesAccountInfoResponse) UnmarshalBinary(b []byte) error {
	var res ResponsesAccountInfoResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
