// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ResponsesReferralConfigResp responses referral config resp
//
// swagger:model responses.ReferralConfigResp
type ResponsesReferralConfigResp struct {

	// Commission rate for the referer
	// Example: 0.1
	CommissionRate string `json:"commission_rate,omitempty"`

	// Volume cap for commission
	// Example: 1000000000
	CommissionVolumeCap string `json:"commission_volume_cap,omitempty"`

	// Discount rate for the referee
	// Example: 0.1
	DiscountRate string `json:"discount_rate,omitempty"`

	// Volume cap for discount
	// Example: 30000000
	DiscountVolumeCap string `json:"discount_volume_cap,omitempty"`

	// Minimum volume required to be eligible for Program
	// Example: 0.123
	MinimumVolume string `json:"minimum_volume,omitempty"`

	// Referral name
	// Example: Referral
	Name string `json:"name,omitempty"`

	// Points bonus rate for the referee
	// Example: 0.1
	PointsBonusRate string `json:"points_bonus_rate,omitempty"`

	// Volume cap for points bonus
	// Example: 1000000000
	PointsBonusVolumeCap string `json:"points_bonus_volume_cap,omitempty"`

	// Referral type
	// Example: Referral
	ReferralType string `json:"referral_type,omitempty"`
}

// Validate validates this responses referral config resp
func (m *ResponsesReferralConfigResp) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this responses referral config resp based on context it is used
func (m *ResponsesReferralConfigResp) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResponsesReferralConfigResp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResponsesReferralConfigResp) UnmarshalBinary(b []byte) error {
	var res ResponsesReferralConfigResp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
